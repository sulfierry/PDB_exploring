import csv
import os

class M8:

    def __init__(self, dir_path="./mmseqs_results/"):
        self.dir_path = dir_path

    def read_m8(self, file_path):
        results = []
        headers = [
            "query_id", "subject_id", "scientific_name", "perc_identity",
            "alignment_length", "mismatches", "gap_opens", "query_start", 
            "query_end", "subject_start", "subject_end", "evalue", "bit_score"
        ]

        with open(file_path, 'r') as file:
            for line in file:
                columns = line.strip().split('\t')
                
                # Inserir o nome científico (penúltima coluna) na terceira posição
                scientific_name = columns[-1]
                columns.insert(2, scientific_name)

                results.append(dict(zip(headers, columns)))

        return results

    def save_to_csv(self, data, output_file):
        with open(output_file, 'w', newline='') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=data[0].keys())
            writer.writeheader()
            for row in data:
                writer.writerow(row)

    def print_formatted(self, data):
        headers = [key for key in data[0].keys() if key != 'query_id']
        
        # Definindo larguras para cada coluna
        col_widths = {
            "subject_id": 30, "scientific_name": 80,
            "perc_identity": 15, "alignment_length": 20, "mismatches": 15,
            "gap_opens": 12, "query_start": 12, "query_end": 12,
            "subject_start": 15, "subject_end": 15, "evalue": 12, "bit_score": 15
        }
        # Imprimindo os cabeçalhos formatados
        print("".join([f"{h:{col_widths[h]}}" for h in headers]))
        print("-" * sum(col_widths.values()))

        for entry in data:
            print("".join([f"{str(entry[h]):{col_widths[h]}}" for h in headers]))


    def count_lines_in_m8(self, file_path):
        with open(file_path, 'r') as file:
            return sum(1 for _ in file)

    def total_organisms_in_directory(self):
        total_count = 0
        for filename in os.listdir(self.dir_path):
            if filename.endswith(".m8"):
                file_path = os.path.join(self.dir_path, filename)
                total_count += self.count_lines_in_m8(file_path)

        return total_count

    def process_files(self):
        for filename in os.listdir(self.dir_path):
            if filename.endswith(".m8"):
                file_path = os.path.join(self.dir_path, filename)
                output_csv_path = os.path.join(self.dir_path, filename.replace(".m8", ".csv"))

                data = self.read_m8(file_path)
                self.save_to_csv(data, output_csv_path)

                print(f"Arquivo {filename} salvo em {output_csv_path}")
                print(f"\nPrimeiras 10 entradas de {filename}:")
                self.print_formatted(data[:10])
                print("\n\n")

def main():
    m8_processor = M8()

    m8_processor.process_files()
    total_organisms = m8_processor.total_organisms_in_directory()
    print(f"Total de organismos em todos os arquivos .m8: {total_organisms}")

if __name__ == "__main__":
    main()
